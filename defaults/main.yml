---

# Config settings for dehydrated
# dehydrated_version: "git" or "package"
dehydrated_version:         "package"
dehydrated_basedir:         "/var/lib/dehydrated"
dehydrated_etcdir:          "/etc/dehydrated"
dehydrated_challengetype:   "http-01"
dehydrated_ca_url:          "https://acme-v02.api.letsencrypt.org/directory"
dehydrated_ca_terms:        "https://acme-v02.api.letsencrypt.org/terms"
dehydrated_configdir:       "{{ dehydrated_etcdir }}/conf.d"
dehydrated_domainstxt:      "{{ dehydrated_etcdir }}/domains.txt"
dehydrated_certsdir:        "{{ dehydrated_basedir }}/certs"
dehydrated_accountsdir:     "{{ dehydrated_basedir }}/accounts"
dehydrated_wellknown:       "{{ dehydrated_basedir }}/acme-challenges"
dehydrated_keysize:         "2048"
dehydrated_renewdays:       "30"
dehydrated_privkeyrenew:    "yes"
dehydrated_privkeyrollover: "no"
dehydrated_keyalgo:         "rsa"
dehydrated_contactmail:     ""
dehydrated_lockfile:        "{{ dehydrated_basedir }}/lock"
dehydrated_ocspstaple:      "no"
dehydrated_run_once:        false
dehydrated_updatelog:       "/var/log/dehydrated.log"

# Update git checkout
dehydrated_updategit:       "true"

# Create weekly cronjob to check and update certificates
dehydrated_cronjob:         "true"

# Which service(s) to reload when updating certs
dehydrated_reload_services:
  - "apache2"

# Apache2 support
dehydrated_apache2dir:      "/etc/apache2"
# Put apache2 config-file for .well-known/acme-challange handling in place
dehydrated_apache2:         "false"
# And enable this config
dehydrated_apache2_enable:  "false"

# Nginx support
dehydrated_nginxdir:        "/etc/nginx"
dehydrated_nginx:           "false"
dehydrated_nginx_enable:    "false"

# List of certs to request, and anternative names on the same line
dehydrated_domains: []

# Commands to run before and after the dehydrated cronjob,
# for example, open up port 80 in the firewall
dehydrated_pre_cronjob:     ""
dehydrated_post_cronjob:    ""
