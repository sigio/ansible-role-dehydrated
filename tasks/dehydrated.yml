---

- name: Checkout git repository for dehydrated
  git: repo=https://github.com/lukas2511/dehydrated.git dest={{dehydrated_basedir}} update={{dehydrated_updategit}}
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated-git
  when:
    - dehydrated_version == 'git'

- name: Install dehydrated package (debian)
  apt:
    state: present
    pkg:
    - dehydrated
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated-apt
  when:
    - dehydrated_version == 'package'
    - ansible_os_family == 'Debian'

- name: Install dehydrated package (redhat)
  yum:
    state: present
    pkg:
    - dehydrated
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated-yum
  when:
    - dehydrated_version == 'package'
    - ansible_os_family == 'RedHat'

- name: Create dehydrated directories
  file:
    state: directory
    path: "{{item.path}}"
    mode: "{{item.mode|default('0700')}}"
  with_items:
    - { path: "{{dehydrated_etcdir}}" }
    - { path: "{{dehydrated_basedir}}", mode: "0755" }
    - { path: "{{dehydrated_configdir}}" }
    - { path: "{{dehydrated_certsdir}}" }
    - { path: "{{dehydrated_certsdir}}/current" }
    - { path: "{{dehydrated_accountsdir}}" }
    - { path: "{{dehydrated_wellknown}}", mode: "0755" }
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated_dirs

- name: Check presense of dh-params file
  stat:
    path: "{{dehydrated_certsdir}}/dh{{dehydrated_keysize}}.pem"
  check_mode: no
  register: dehydrated_dhparams

- name: Generate dh-params file
  command: "openssl dhparam -out {{dehydrated_certsdir}}/dh{{dehydrated_keysize}}.pem {{dehydrated_keysize}}"
  args:
    chdir: "{{dehydrated_certsdir}}"
    creates: "{{dehydrated_certsdir}}/dh{{dehydrated_keysize}}.pem"
  async: 900
  check_mode: no
  poll: 0
  register: dhparams
  when:
    - dehydrated_dhparams.stat.exists == false

- name: Template dehydrated config files
  template:
    src: "{{item.src}}"
    dest: "{{item.dest}}"
    owner: "{{item.owner|default('root')}}"
    group: "{{item.group|default('root')}}"
    mode: "{{item.mode|default('0600')}}"
  with_items:
    - { src: "config.j2", dest: "{{dehydrated_etcdir}}/config" }
    - { src: "domains.txt.j2", dest: "{{dehydrated_domainstxt}}" }
    - { src: "config2.j2", dest: "{{dehydrated_configdir}}/ansible.sh", mode: "0755" }
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated_domains.txt

- name: Create local.sh config file
  file:
    state: touch
    path: "{{dehydrated_configdir}}/local.sh"
    mode: "0755"
  changed_when: false
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated_local

- name: Create account key and accept terms
  command: "{{dehydrated_basedir}}/dehydrated --register --accept-terms"
  args:
    creates: "{{dehydrated_accountsdir}}/*/account_key.pem"
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated-account
  when:
    - dehydrated_version == 'git'

- name: Enable cronjob for dehydrated
  template:
    src: "cronjob"
    dest: "/etc/cron.weekly/dehydrated"
    owner: "root"
    group: "root"
    mode: "0755"
  when:
    - dehydrated_cronjob|bool
  run_once: "{{dehydrated_run_once}}"
  tags:
    - dehydrated
    - dehydrated_cronjob

- name: Include 'apache' tasks
  include_tasks: apache.yml
  when:
    - dehydrated_apache2|bool

- name: Include 'nginx' tasks
  include_tasks: nginx.yml
  when:
    - dehydrated_nginx|bool
